// backend/controllers/videoController.js

const Video = require('../models/Video'); // Import the Video model

// Controller for uploading a video
exports.uploadVideo = async (req, res) => {
  try {
    // Extract video information from the request (e.g., file, title)
    const { file, title } = req.body;

    // Create a new Video document in the database
    const newVideo = new Video({
      title,
      url: file.path, // Assuming multer is used for file uploads
      uploadDate: new Date(),
      deleteDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 days from now
      viewCount: 0,
    });

    // Save the new video document
    await newVideo.save();

    res.status(201).json({ message: 'Video uploaded successfully!', video: newVideo });
  } catch (error) {
    console.error('Error uploading video:', error);
    res.status(500).json({ message: 'Error uploading video.' });
  }
};

// Controller for getting video details by ID
exports.getVideoDetails = async (req, res) => {
  try {
    const videoId = req.params.id;

    // Find the video document by ID
    const video = await Video.findById(videoId);

    if (!video) {
      return res.status(404).json({ message: 'Video not found.' });
    }

    res.status(200).json({ video });
  } catch (error) {
    console.error('Error getting video details:', error);
    res.status(500).json({ message: 'Error getting video details.' });
  }
};

// Controller for updating view count of a video
exports.incrementViewCount = async (req, res) => {
  try {
    const videoId = req.params.id;

    // Find the video document by ID and increment view count
    await Video.findByIdAndUpdate(videoId, { $inc: { viewCount: 1 } });

    res.status(200).json({ message: 'View count updated successfully.' });
  } catch (error) {
    console.error('Error updating view count:', error);
    res.status(500).json({ message: 'Error updating view count.' });
  }
};
